type Query {
  ingredient(_id: ID!): Ingredient
  ingredients: [Ingredient!]!
  recipe(_id: ID!): Recipe
  recipes: [Recipe!]!
  image(_id: ID!): Image
  dietary: Dietary
}

type Mutation {
  createIngredient(name: String!, calories: Int!, dietary: DietaryInput!): Ingredient!
  deleteIngredient(_id: ID!): Ingredient!
  updateIngredient(_id: ID!, name: String, calories: Int, dietary: DietaryInput): Ingredient!

  createRecipe(
    name: String!
    description: String!
    category: String!
    dietary: DietaryInput!
    ingredients: [IngredientInput!]!
    steps: [StepInput!]!
  ): Recipe!
  deleteRecipe(_id: ID!): Recipe!
}

type Ingredient {
  _id: ID!
  name: String!
  calories: Int!
  dietary: Dietary!
  amount: String
}

# using Mongoose to look up ingredient documents by ID so don't need name, calories, or dietary
input IngredientInput {
  _id: ID!
  amount: String!
}

type Recipe {
  _id: ID!
  name: String!
  description: String!
  images: [Image]
  category: String!
  dietary: Dietary!
  ingredients: [Ingredient!]!
  steps: [Step!]!
}

type Step {
  content: String!
}

input StepInput {
  content: String!
}

type Image {
  _id: ID!
  url: String!
  alt: String!
}

type Dietary {
  vegetarian: Boolean!
  vegan: Boolean!
  glutenFree: Boolean!
}

input DietaryInput {
  vegetarian: Boolean!
  vegan: Boolean!
  glutenFree: Boolean!
}

type Partial {
  _id: ID!
  name: String!
  content: String!
  time: Int!
  unit: String!
  ingredients: [Ingredient!]!
}
